// :root {
//     --color-main : red
// }

// div {
//     color: var(--color-main);
//     width: calc(100vw - 100px);
// }

@import './media.scss';

$color-main: red;

// style 코드 블록을 @mixin을 이용하여 함수처럼 하나로 묶어두고,
@mixin box-width($size) {
  width: $size;
  height: $size;
}

// 사용할 땐 @include 키워드를 이용하여 사용
.box1 {
  @include box-width(100px);
  background-color: blue;
}

.box2 {
  @include box-width(200px);
  //   width: $size;
  //   height: $size;
  background-color: green;
}

.scss-parents {
  color: $color-main;
  width: (300px - 200px);
  //   background-color: aqua;
}

.scss-parents {
  ul {
    background-color: black;
    color: white;
  }

  &:hover {
    cursor: pointer;
  }
}

.btn {
  padding: 10px 20px;
  border: none;
  border-radius: 5px;
}

.btn-primary {
  @extend .btn;
  background-color: aqua;
}

// 네모네모
.origin-sass {
  display: flex;
  .box {
    @include box-width(100px);

    &.red {
      background-color: red;
    }

    &.orange {
      background-color: orange;
    }

    &.yellow {
      background-color: yellow;
    }

    &.green {
      background-color: green;
    }

    &.blue {
      background-color: blue;
    }
  }
}

@media screen and (max-width: 768px) {
  .origin-sass {
    display: block;
  }
}

// 테블릿일 떄는 768px
@mixin tablet {
  @media screen and (max-width: 768px) {
    @content;
  }
}

// @mixin : css에서는 묶어두고 싶은 코드블럭을 정의할 때 사용
// @include : 정의한 mixin을 사용할 때

// @content : 정의할 때 @content 키워드 적은 곳에 뭐가 - 사용할 때, 중괄호 안에 적은 내용

@include tablet {
  .origin-sass {
    display: block;
  }
}

// 핸드폰일 떄는 500px
